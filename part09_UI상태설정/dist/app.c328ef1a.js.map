{"version":3,"sources":["app.js"],"names":["container","document","getElementById","ajax","XMLHttpRequest","NEWS_URL","CONTENT_URL","store","currentPage","feeds","getDate","URL","open","send","JSON","parse","response","Content","createElement","ul","makeComments","i","length","newsFeed","newsList","template","push","read","id","title","comments_count","user","points","time_ago","replace","join","innerHTML","newsDetail","location","hash","substr","console","log","newsContent","content","Number","makeComment","comments","called","commentString","router","routerPath","indexOf","window","addEventListener"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["//중복된 코드를 리팩토리 \r\n\r\n//html에서 container 태그를 가져옴\r\nconst container = document.getElementById('root');\r\n//서버 통신을 위해서 XMLHttpRequest() 변수 ajax 담는다 \r\nconst ajax = new XMLHttpRequest();\r\n\r\nconst NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json';\r\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json';\r\n\r\n//공유할수있는 변수설정\r\nconst store = {\r\n    currentPage: 1,\r\n    feeds: [],\r\n}\r\n\r\n//중복되는 AJAX 함수를 만들기 바뀌는 부분은 URL 밖에 없기 떄문에 인자로 URL 넣고 호출할떄마다 URL 바꿔준다\r\nfunction getDate(URL){\r\n    //ajax 통신 open , send , response\r\n    //ajx.open('method 방식' , 'api url' , 비동기통신 안한다는뜻입니다)\r\n    ajax.open('GET' , URL  , false)\r\n    ajax.send();\r\n    //JOSON 형태로 return 값을 받는다\r\n    return JSON.parse(ajax.response);\r\n \r\n};\r\n\r\n//div 생성\r\nconst Content = document.createElement('div');\r\n\r\n//createElement 생성 \r\nconst ul = document.createElement('ul');\r\n\r\nfunction makeComments(feeds){\r\n    for(let i = 0; i < feeds.length; i++){\r\n      feeds[i].length = false;\r\n    }\r\n    return feeds\r\n}\r\n\r\nfunction newsFeed(){\r\n    let newsFeed = store.feeds;\r\n  \r\n    const newsList = [];\r\n\r\n    // 템플렛 큰틀을 만들어서 UI 배치\r\n    let template = `\r\n        <div class=\"bg-gray-600 min-h-screen\">\r\n        <div class=\"bg-white text-xl\">\r\n        <div class=\"mx-auto px-4\">\r\n            <div class=\"flex justify-between items-center py-6\">\r\n            <div class=\"flex justify-start\">\r\n                <h1 class=\"font-extrabold\"><a href=\"/\">Hacker News</a></h1>\r\n            </div>\r\n            <div class=\"items-center justify-end\">\r\n                <a href=\"#/page/{{__prev_page__}}\" class=\"text-gray-500\">\r\n                Previous\r\n                </a>\r\n                <a href=\"#/page/{{__next_page__}}\" class=\"text-gray-500 ml-4\">\r\n                Next\r\n                </a>\r\n            </div>\r\n            </div> \r\n        </div>\r\n        </div>\r\n        <div class=\"p-4 text-2xl text-gray-700\">\r\n        {{__news_feed__}}        \r\n        </div>\r\n    </div>\r\n    `;\r\n\r\n    if(newsFeed.length === 0){\r\n      newsFeed = store.feeds = makeComments(getDate(NEWS_URL));\r\n    }\r\n\r\n    //for문으로 먼저 10의 title값을 가져오기\r\n    //문자열로 html 만들기 되도록 DOM객체에 Element속성을 안쓰고 UI를 구성하는것이 효율적이고 좋음\r\n    for(let i = (store.currentPage -1) * 10; i < store.currentPage * 10; i++){\r\n        newsList.push(`\r\n            <div class=\"p-6 ${newsFeed[i].read ? 'bg-red-500' : 'bg-white'} mt-6 rounded-lg shadow-md transition-colors duration-500 hover:bg-green-100\">\r\n            <div class=\"flex\">\r\n            <div class=\"flex-auto\">\r\n                <a href=\"#/show/${newsFeed[i].id}\">${newsFeed[i].title}</a>  \r\n            </div>\r\n            <div class=\"text-center text-sm\">\r\n                <div class=\"w-10 text-white bg-green-300 rounded-lg px-0 py-2\">${newsFeed[i].comments_count}</div>\r\n            </div>\r\n            </div>\r\n            <div class=\"flex mt-3\">\r\n            <div class=\"grid grid-cols-3 text-sm text-gray-500\">\r\n                <div><i class=\"fas fa-user mr-1\"></i>${newsFeed[i].user}</div>\r\n                <div><i class=\"fas fa-heart mr-1\"></i>${newsFeed[i].points}</div>\r\n                <div><i class=\"far fa-clock mr-1\"></i>${newsFeed[i].time_ago}</div>\r\n            </div>  \r\n            </div>\r\n        </div>  \r\n        `);\r\n    };\r\n\r\n    //삼합연산자로 page 1에서 0으로 안되게 했습니다\r\n\r\n\r\n    template = template.replace('{{__news_feed__}}' , newsList.join(''));\r\n    template = template.replace('{{__prev_page__}}' , store.currentPage > 1 ? store.currentPage -1 : 1);\r\n    template = template.replace('{{__next_page__}}' , store.currentPage + 1);\r\n\r\n    // join() 메서드는 배열의 모든 요소를 연결해 하나의 문자열로 만듭니다.\r\n    container.innerHTML = template\r\n}\r\n\r\nfunction newsDetail(){\r\n    //newsContent API url 보면 @id 부분에 @지우기 위해 substr 썻다\r\n    const id = location.hash.substr(7);\r\n    console.log('hash 변경됨');\r\n\r\n    //hash 값을 구하기위해서 replace 메소드를 속성을 써거 첫번쨰 인자를 두번쨰 인자로 바꾼다.\r\n    const newsContent = getDate(CONTENT_URL.replace('@id', id));\r\n    let template = `\r\n    <div class=\"bg-gray-600 min-h-screen pb-8\">\r\n    <div class=\"bg-white text-xl\">\r\n      <div class=\"mx-auto px-4\">\r\n        <div class=\"flex justify-between items-center py-6\">\r\n          <div class=\"flex justify-start\">\r\n            <h1 class=\"font-extrabold\"><a href=\"/\">Hacker News</a></h1>\r\n          </div>\r\n          <div class=\"items-center justify-end\">\r\n            <a href=\"#/page/${store.currentPage}\" class=\"text-gray-500\">\r\n              <i class=\"fa fa-times\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"h-full border rounded-xl bg-white m-6 p-4 \">\r\n      <h2>${newsContent.title}</h2>\r\n      <div class=\"text-gray-400 h-20\">\r\n        ${newsContent.content}\r\n      </div>\r\n\r\n      {{__comments__}}\r\n\r\n    </div>\r\n  </div>\r\n    `;\r\n\r\n    for(let i = 0; i < store.feeds.length; i++){\r\n      if(store.feeds[i].id === Number(id)){\r\n          store.feeds[i].read = true;\r\n          break\r\n      }\r\n    }\r\n\r\n\r\n    //댓글 함수\r\n\r\n    function makeComment(comments , called = 0){\r\n        const commentString = [];\r\n\r\n        for(let i = 0; i < comments.length; i++){\r\n            commentString.push(`\r\n            <div style=\"padding-left: ${called * 40}px;\" class=\"mt-4\">\r\n            <div class=\"text-gray-400\">\r\n              <i class=\"fa fa-sort-up mr-2\"></i>\r\n              <strong>${comments[i].user}</strong> ${comments[i].time_ago}\r\n            </div>\r\n            <p class=\"text-gray-700\">${comments[i].content}</p>\r\n          </div>  \r\n            `);\r\n            if(comments[i].comments.length > 0){\r\n                commentString.push(makeComment(comments[i].comments , called + 1));\r\n            }\r\n        }\r\n\r\n\r\n        return commentString.join('');\r\n    }\r\n    //문자열 만들기\r\n    container.innerHTML = template.replace('{{__comments__}}' , makeComment(newsContent.comments));\r\n}\r\n\r\n\r\n\r\n\r\n//라우터 생성 hash 없을때는 newsFeed() 있으면 newDetail();\r\nfunction router(){\r\n    const routerPath = location.hash;\r\n\r\n    if(routerPath === \"\"){\r\n        newsFeed();\r\n    }else if(routerPath.indexOf('#/page/') >= 0){\r\n        store.currentPage = Number(routerPath.substr(7))\r\n        newsFeed();\r\n    }else{\r\n        newsDetail();\r\n    }\r\n}\r\n\r\n//hash event 생성\r\n//hashchange 이벤트는 같은 페이지 안에서 해시(#)만 바뀌었을 때, 즉 페이지에서 id가 있는 요소로 이동하게 하기위해서 hash를 쓴다 \r\nwindow.addEventListener('hashchange' , router);\r\nrouter();\r\n\r\n\r\n"]}