{"version":3,"sources":["app.js"],"names":["container","document","getElementById","ajax","XMLHttpRequest","Content","createElement","open","send","newsFeed","JSON","parse","response","console","log","ul","window","addEventListener","id","location","hash","newsContent","title","innerHTML","appendChild","i","li","a","href","comments_count"],"mappings":"AAAA;AACA,IAAMA,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlB,EACA;;AACA,IAAMC,IAAI,GAAG,IAAIC,cAAJ,EAAb,EAEA;;AACA,IAAMC,OAAO,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAhB,EAEA;AACA;;AACAH,IAAI,CAACI,IAAL,CAAU,KAAV,EAAkB,uCAAlB,EAA4D,KAA5D;AACAJ,IAAI,CAACK,IAAL,IAEA;;AACA,IAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,CAACS,QAAhB,CAAjB;AACAC,OAAO,CAACC,GAAR,CAAYL,QAAZ,GAEA;;AACA,IAAMM,EAAE,GAAGd,QAAQ,CAACK,aAAT,CAAuB,IAAvB,CAAX,EAGA;AACA;;AACAU,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAuC,YAAU;AAC7C,MAAMC,EAAE,GAAGC,QAAQ,CAACC,IAApB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAF6C,CAI7C;;AACAX,EAAAA,IAAI,CAACI,IAAL,CAAU,KAAV,EAAiB,6CAAjB,EAAgE,KAAhE;AACAJ,EAAAA,IAAI,CAACK,IAAL;AACA,MAAMa,WAAW,GAAGX,IAAI,CAACC,KAAL,CAAWR,IAAI,CAACS,QAAhB,CAApB;AAEA,MAAMU,KAAK,GAAGrB,QAAQ,CAACK,aAAT,CAAuB,IAAvB,CAAd;AAEAgB,EAAAA,KAAK,CAACC,SAAN,GAAkBF,WAAW,CAACC,KAA9B;AAEAjB,EAAAA,OAAO,CAACmB,WAAR,CAAoBF,KAApB;AAEH,CAfD,GAmBA;;AACA,KAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvB,MAAMC,EAAE,GAAGzB,QAAQ,CAACK,aAAT,CAAuB,IAAvB,CAAX;AACA,MAAMqB,CAAC,GAAG1B,QAAQ,CAACK,aAAT,CAAuB,GAAvB,CAAV;AAGAqB,EAAAA,CAAC,CAACC,IAAF,cAAanB,QAAQ,CAACgB,CAAD,CAAR,CAAYP,EAAzB;AACAS,EAAAA,CAAC,CAACJ,SAAF,aAAiBd,QAAQ,CAACgB,CAAD,CAAR,CAAYH,KAA7B,eAAuCb,QAAQ,CAACgB,CAAD,CAAR,CAAYI,cAAnD,OANuB,CASvB;AACA;;AACAH,EAAAA,EAAE,CAACF,WAAH,CAAeG,CAAf;AACAZ,EAAAA,EAAE,CAACS,WAAH,CAAeE,EAAf;AAEH,EAED;;;AACA1B,SAAS,CAACwB,WAAV,CAAsBT,EAAtB;AACAf,SAAS,CAACwB,WAAV,CAAsBnB,OAAtB","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["//html에서 container 태그를 가져옴\r\nconst container = document.getElementById('root');\r\n//서버 통신을 위해서 XMLHttpRequest() 변수 ajax 담는다 \r\nconst ajax = new XMLHttpRequest();\r\n\r\n//div 생성\r\nconst Content = document.createElement('div');\r\n\r\n//ajax 통신 open , send , response\r\n//ajx.open('method 방식' , 'api url' , 비동기통신 안한다는뜻입니다)\r\najax.open('GET' , '\thttps://api.hnpwa.com/v0/news/1.json' , false)\r\najax.send();\r\n\r\n//JOSON 형태로 값을 받는다\r\nconst newsFeed = JSON.parse(ajax.response);\r\nconsole.log(newsFeed)\r\n\r\n//createElement 생성 \r\nconst ul = document.createElement('ul');\r\n\r\n\r\n//hash event 생성\r\n//hashchange 이벤트는 같은 페이지 안에서 해시(#)만 바뀌었을 때, 즉 페이지에서 id가 있는 요소로 이동하게 하기위해서 hash를 쓴다 \r\nwindow.addEventListener('hashchange' , function(){\r\n    const id = location.hash;\r\n    console.log('hash 변경됨');\r\n\r\n    //hash 값을 구하기위해서 replace 메소드를 속성을 쓴다.\r\n    ajax.open('GET', 'https://api.hnpwa.com/v0/item/13831370.json', false);\r\n    ajax.send();\r\n    const newsContent = JSON.parse(ajax.response);\r\n\r\n    const title = document.createElement('h1');\r\n\r\n    title.innerHTML = newsContent.title;\r\n\r\n    Content.appendChild(title);\r\n\r\n})\r\n\r\n\r\n\r\n//for문으로 먼저 10의 title값을 가져오기\r\nfor(let i = 0; i < 10; i++){\r\n    const li = document.createElement('li');\r\n    const a = document.createElement('a');\r\n    \r\n\r\n    a.href = `#${newsFeed[i].id}`;\r\n    a.innerHTML = `${newsFeed[i].title} (${newsFeed[i].comments_count})`\r\n\r\n\r\n    // a Element 생성 후 값들을 넣어주고 li appendChild 자식으로 넣어준다\r\n    // ul태그안에 자식 li 넣는다 appenChild 자식을 넣기위한 메소드\r\n    li.appendChild(a);\r\n    ul.appendChild(li);\r\n\r\n}\r\n\r\n//container 넣음으로 결과 값이 잘나온다!\r\ncontainer.appendChild(ul);\r\ncontainer.appendChild(Content);"]}